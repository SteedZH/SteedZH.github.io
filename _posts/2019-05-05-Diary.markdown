---
layout: post
title:  "Daily record"
date:   2019-05-05 12:10:00 +0000
categories: jekyll update
---
Apache+PHP+MySQL Configuration

I try to deploy apache, PHP, MySQL in my Win10 and AWS ubuntu, the diary is just for recording and future possible configuring again.

For Windows:
I download Apache from [The Apache Haus][The-Apache-Haus], choosing `Apache 2.4 Server Binaries-Apache 2.4.39 x64`, unzip it. Then just change `http.conf`:
This file uses `/` instead of `\` though we are in Windows
`Define SRVROOT`: `"your-path-for-Apache2"`
`Listen`: `port(you would like to set)`
`The web folder`: `DocumentRoot "${SRVROOT}/htdocs"`

Get PHP from [PHP][PHP], choosing `Thread Safe` version, unzip and change `php.ini-development`
`extension_dir = "path-for-php/ext"`
cancel the annotation for `extension=mysqli` and others you could find in Google

In Apache `httpd.conf`:
Add support for php7
`PHPIniDir "your-php-path/php.ini-development"`
`LoadModule php7_module "your-php-path/php7apache2_4.dll"`

In <IfModule mime_module>
add `AddType application/x-httpd-php .php`

In <IfModule dir_module>
change to `DirectoryIndex index.html index.php`

For Linux:
sudo apt-get install apache2
DocumentRoot could be changed in `/etc/apache2/sites-available/000-default.conf`
sudo apt-get install libapache2-mod-php7 php7

In `/etc/apache2/mods-available/mime.conf` add
`AddType application/x-httpd-php-source .phps`
`AddType application/x-httpd-php .php`

In `/etc/apache2/mods-available/mime.load` add
'LoadModule php7_module /usr/lib/apache2/modules/libphp7.2.so'

install mysql extension: `apt-get install php-mysqli`
(I have tried to change the php extension file, but it just need to install this extension, changing extension file like win10 is useless.)

The install mysql in win10 is easy, I do not explain that.

Tips: I used WSL in win10 instead of putty, ssh with my .pem private key to connect with aws server, scp to transfer files. After deploying all the environment in server, I use sparsecheckout to download what I need:
After init:
`git config core.sparsecheckout true`
`echo "file-to-sparsecheckout" >> .git/info/sparse-checkout`
then add remote origin and pull.(When finding sparsecheckout, I know pull divided into fetch and ? two steps, explaining further maybe)

This is the first record, even though now I am so busy, Come on!

[The-Apache-Haus]:https://www.apachehaus.com/cgi-bin/download.plx
[PHP]:https://windows.php.net/download#php-7.3